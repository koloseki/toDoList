(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))d(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&d(r)}).observe(document,{childList:!0,subtree:!0});function o(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function d(n){if(n.ep)return;n.ep=!0;const s=o(n);fetch(n.href,s)}})();let c,m=JSON.parse(localStorage.getItem("my_folder"));Array.isArray(m)?c=m.map(e=>({name:e.name,tasks:Array.isArray(e.tasks)?e.tasks.map(t=>({...t})):[]})):(c=[],localStorage.setItem("my_folder",JSON.stringify(c)));const S=document.querySelector(".folderModal"),y=document.querySelector(".tasks"),f=document.querySelector(".DestroyFolderModal"),k=document.querySelector(".createNewTaskModal"),h=document.querySelectorAll("dialog"),B=document.querySelector("#FolderName"),g=document.querySelector(".folders");window.addEventListener("load",function(){F(),u(),a(),h.forEach(r=>{r.addEventListener("click",l=>{const i=r.getBoundingClientRect();(l.clientX<i.left||l.clientX>i.right||l.clientY<i.top||l.clientY>i.bottom)&&r.close()})}),document.querySelectorAll(".FolderButton button").forEach(r=>{r.addEventListener("click",function(){const l=document.querySelector('.FolderButton button[id="selected"]');l&&l.removeAttribute("id"),r.setAttribute("id","selected"),a()})}),document.getElementById("createFolderButton").addEventListener("click",function(){const r=document.getElementById("FolderName");E(r.value)}),document.querySelector(".DestroyFolder").addEventListener("click",function(){const r=document.querySelector('.FolderButton button[id="selected"]');if(r){const l=r.parentNode;r.textContent;const i=Array.from(l.parentNode.children).indexOf(l);c.splice(i,1),localStorage.setItem("my_folder",JSON.stringify(c)),l.parentNode.removeChild(l),u(),f.close()}});const d=document.querySelector("#createNewTaskButton"),n=document.querySelector("#TaskName"),s=document.querySelector("#TaskDescription");d.addEventListener("click",function(){const r=document.querySelector('.FolderButton button[id="selected"]');if(a(),r){r.textContent,n.value,s.value;const l=Array.from(r.parentNode.parentNode.children).indexOf(r.parentNode),i=c[l];i.hasOwnProperty("tasks")||(i.tasks=[]),L(l,n.value,s.value),k.close()}})});function u(){const e=document.querySelector(".FolderButton button");e&&e.setAttribute("id","selected"),a()}const N=document.querySelector(".newFolder");N.addEventListener("click",()=>{S.showModal()});const v=document.querySelector(".OpenDestroyFolderModal"),b=document.querySelector("#nameOfDeletingFolder");v.addEventListener("click",()=>{b.innerHTML=document.querySelector('.FolderButton button[id="selected"]').textContent,f.showModal()});const q=document.querySelector(".closeDestroyFolderModal");q.addEventListener("click",()=>{f.close()});const O=document.querySelector(".addNewTask");O.addEventListener("click",function(){console.log("true"),k.showModal()});function E(e){if(e==="")console.log("Value should not be empty");else{const t={name:e,tasks:[]};c.push(t),localStorage.setItem("my_folder",JSON.stringify(c)),F(),u(),B.value="",S.close(),console.log(c)}}function L(e,t,o){const d={name:t,description:o,isDone:!1,status:"todo"};c[e].tasks.push(d),localStorage.setItem("my_folder",JSON.stringify(c,(n,s)=>n==="tasks"&&Array.isArray(s)?s.map(r=>({...r})):s)),localStorage.setItem("my_folder",JSON.stringify(c)),a(),console.log(`Created new task in folder: ${c[e]}`),console.log(c[e])}function w(e,t){const o=c[e].tasks[t];o.status==="done"?o.status="inProgress":o.status==="inProgress"?o.status="todo":o.status==="todo"&&(o.isDone=!1,o.status="done"),localStorage.setItem("my_folder",JSON.stringify(c)),a()}function p(e,t){switch(t){case"done":return"done";case"inProgress":return"inProgress";case"todo":return"todo";default:return console.error("Unknown status:",t),""}}function A(e,t){const o=c[e].tasks[t];if(e>=0&&e<c.length&&o.status=="done"){const d=c[e];t>=0&&t<d.tasks.length&&(d.tasks.splice(t,1),localStorage.setItem("my_folder",JSON.stringify(c)),a())}}function a(){y.innerHTML="";const e=document.querySelector('.FolderButton button[id="selected"]');if(e){const t=Array.from(e.parentNode.parentNode.children).indexOf(e.parentNode),o=c[t];o.hasOwnProperty("tasks")&&o.tasks.forEach((d,n)=>{const s=document.createElement("li");s.innerHTML=`
          <div class="task">
            <div class="title_control">
              <button class="priorityButton ${p(d.isDone,d.status)}" data-index="${t}" data-task-index="${n}"></button>
              <div class="taskName ${p(d.isDone,d.status)}">
                <h3>${d.name} </h3>
              </div>
              <button class="deleteTask" data-index="${t}" data-task-index="${n}">
                <img src='xSolid.svg' alt='Close Button'>
              </button>
            </div>
            <div class="taskDescription">
              ${d.description}
            </div>
          </div>
        `;const r=s.querySelector(".priorityButton"),l=s.querySelector(".deleteTask");r.addEventListener("click",D),l.addEventListener("click",M),y.appendChild(s)})}}function D(e){const t=e.target.getAttribute("data-index"),o=e.target.getAttribute("data-task-index");w(t,o)}function M(e){const t=e.target.getAttribute("data-index"),o=e.target.getAttribute("data-task-index");A(t,o)}function F(){g.innerHTML="",c.forEach((e,t)=>{const o=document.createElement("button");o.textContent=e.name,o.addEventListener("click",function(){const n=document.querySelector('.FolderButton button[id="selected"]');n&&n.removeAttribute("id"),o.setAttribute("id","selected")});const d=document.createElement("li");d.classList.add("FolderButton"),d.appendChild(o),g.appendChild(d)})}
